@import 'config';
@import 'card';
@import 'popup';
@import 'spinner';
@import 'form';
@import 'nav';
@import 'notifications';

//base resets
*{
    box-sizing: border-box;
    margin:0;
    padding:0;
}

body {
    background-color: $background-color;
    color: $light-grey;
    font-size: 1rem;
    line-height: 1.6;
    font-family: "Russo One";
	overflow-x: hidden;
	width:100vw;
}

// .spacer {
// 	height:10em;
// 	width: 100%;
// }

.container {
	position:relative;
	width: 100vw;
	position: relative;
	margin-left: auto;
	margin-right: auto;
	padding-top:4em;
	display: flex;
	justify-content: flex-start;
}

.not-active-right {
	transform: translate(100%, 0);
    transition: all .2s  linear;
	opacity:0;
}

.not-active-left {
	transform: translate(-100%, 0);
    transition: all .2s linear;
	opacity:0;
}
.not-active{
    transition: all 1s linear;
	opacity:0;
}
.is-active {
	transition: all 1s linear;
	opacity:1;
}

.cursor-pointer {
	cursor: pointer;
}

.flex-between {
	display: flex;
	justify-content: space-between;
	align-items: center;
}
.flex-fill {
	display: flex;
	justify-content: space-around;
	align-items: center;
}

.primary {
	color:$color-primary;
}

.done {
	background-color: $card-body-color!important;
	color:$disabled!important;
}

.trash {
	margin-right:.5em;
	color: $imperial-red;
	z-index: 10;
}

.btn {
	width: 100%;
	border:none;
	outline: none;
	font-weight: bolder;
	text-align: center;
	padding: .5em;
	border-radius: 5px;
	margin:1em;
	cursor: pointer;
	box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.1);
	transition: all .2s linear;

	&.cancel {
		background-color: $imperial-red;
		
	}

	&.confirm {
		background-color: green;
	}

	&:hover {
		transform: translate(-1px,-1px);
		// box-shadow:         inset 0 0 2px #000000;
		// background-color: $card-head-color;
	}
}

.error {
	background-color: crimson;
}
.success {
	background-color: green;
}
.error-text {
	color: crimson;
}
.success-text {
	color: green;
}

.friends-container {
	display: flex;
	justify-content: space-between;
	flex-direction: column;
	flex-wrap: wrap;
	


	&>.card{
		position: relative!important;
		width:95%;
		margin-top:1em;
	}
	&>.card>.card-body {
		padding-left:0;
		padding-right:0;
	}
	&>.card>.card-body>ul {
		margin:0;
		padding:0;
		width:100%;
		&>li {
			margin:0;
			width: 100%;
			list-style-type: none;
			display:flex;
			justify-content: space-between;
			align-items: flex-end;
			border-bottom: 1px solid $color-primary;
			padding:1em;
		}
	}
}

.list-nav {
	position: fixed;
	bottom:0;
	left:0;
	right:0;
	padding: 1em 2em 1em 2em;
	background-color: $cg-blue;
	display: flex;
	justify-content: space-between;
	z-index: 15;

	&>div>i {
		cursor: pointer;
		filter:drop-shadow(2px 2px 1px rgba(0, 0, 0, 0.3));

		&:hover {
			color: $silver-chalice;
			filter:drop-shadow(3px 3px 1px rgba(0, 0, 0, 0.3));
		}
	}

}

.cancel-btn {
	color: $ruby-red;
	&:hover {
		color:$blood-red!important;
	}
}

.fade-enter-active,
.fade-leave-active {
  transition: opacity 0.5s ease;
}

.fade-enter-from,
.fade-leave-to {
  opacity: 0;
}

.not-active-right-enter-active,
.not-active-right-leave-active {
	transition: all .3s  linear;
}

.not-active-right-enter-from,
.not-active-right-leave-to {
	transform: translate(100%, 0);
	opacity:0;
}

.not-active-left-enter-active,
.not-active-left-leave-active {
	transition: all .3s  linear;
}

.not-active-left-enter-from,
.not-active-left-leave-to {
	transform: translate(-100%, 0);
	opacity:0;
}


/* width */
::-webkit-scrollbar {
	width: 10px;
  }
  
  /* Track */
  ::-webkit-scrollbar-track {
	background: #f1f1f1; 
  }
   
  /* Handle */
  ::-webkit-scrollbar-thumb {
	background: #888; 
  }
  
  /* Handle on hover */
  ::-webkit-scrollbar-thumb:hover {
	background: #555; 
  }